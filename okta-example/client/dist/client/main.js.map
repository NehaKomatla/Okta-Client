{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/car-edit/car-edit.component.css","webpack:///./src/app/car-edit/car-edit.component.html","webpack:///./src/app/car-edit/car-edit.component.ts","webpack:///./src/app/car-list/car-list.component.css","webpack:///./src/app/car-list/car-list.component.html","webpack:///./src/app/car-list/car-list.component.ts","webpack:///./src/app/configs/.okta.config.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http-interceptor.ts","webpack:///./src/app/shared/car/car.service.ts","webpack:///./src/app/shared/giphy/giphy.service.ts","webpack:///./src/app/shared/okta/auth.interceptor.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACU;AACA;AAEX;AAEtD,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAC;IACnD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,kEAAa;KACzB;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,6EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,6EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,6EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,mBAAmB;QACxB,SAAS,EAAE,6EAAgB;KAC7B;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnC7B,mCAAmC,mBAAmB,GAAG,+CAA+C,mR;;;;;;;;;;;ACAxG,wEAAwE,OAAO,wQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7B;AACG;AAOrD;IAIE,sBAAmB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;QAH5C,UAAK,GAAG,QAAQ,CAAC;IAIjB,CAAC;IAEK,+BAAQ,GAAd;;;;;;;wBACE,SAAI;wBAAmB,qBAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;;wBAA5D,GAAK,eAAe,GAAG,SAAqC,CAAC;wBAC7D,4CAA4C;wBAC5C,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,SAAS,CAC1C,UAAC,eAAwB,IAAM,YAAI,CAAC,eAAe,GAAG,eAAe,EAAtC,CAAsC,CACtE,CAAC;;;;;KACH;IAbU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAK6B,kEAAe;OAJjC,YAAY,CAcxB;IAAD,mBAAC;CAAA;AAdwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACA;AACjB;AAEe;AACT;AAC4B;AACV;AACmD;AACrC;AACd;AACpB;AACoB;AACA;AACX;AACN;AAEhD,IAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC;IACnC,cAAc,EAAE,UAAC,EAAkB;YAAjB,sBAAQ,EAAE,kBAAM;QAEhC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC9B,CAAC;CACF,EAAE,6DAAU,CAAC,IAAI,CAAC,CAAC;AACpB,mBAAmB;AACnB,wDAAwD;AACxD,4DAA4D;AAC5D,sCAAsC;AACtC,kCAAkC;AAClC,KAAK;AA0BL;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6EAAgB;gBAChB,6EAAgB;gBAChB,mEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;gBAChB,4FAAuB;gBACvB,iEAAe;gBACf,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,kEAAgB;gBAChB,2DAAW;gBACX,kEAAc,CAAC,QAAQ,CAAC,cAAc,CAAC;aACxC;YACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,8EAAe,EAAE,KAAK,EAAE,IAAI,EAAE;gBAClF,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,sEAAoB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;YAC5E,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtDtB,0BAA0B,iBAAiB,GAAG,+CAA+C,uS;;;;;;;;;;;ACA7F,kJAAkJ,2BAA2B,+xBAA+xB,cAAc,WAAW,UAAU,oE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl7B;AAEJ;AACF;AAEM;AAO7D;IAKE,0BAAoB,KAAqB,EACrB,MAAc,EACd,UAAsB,EACtB,YAA0B;QAH1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAP9C,QAAG,GAAQ,EAAE,CAAC;IAQd,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC3C,IAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,EAAE,EAAE;gBACN,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;oBACzC,IAAI,GAAG,EAAE;wBACP,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;wBACf,KAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;wBACrC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,QAAQ,GAAG,GAAG,EAAlB,CAAkB,CAAC,CAAC;qBACtE;yBAAM;wBACL,OAAO,CAAC,GAAG,CAAC,kBAAgB,EAAE,mCAAgC,CAAC,CAAC;wBAChE,KAAI,CAAC,QAAQ,EAAE,CAAC;qBACjB;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,+BAAI,GAAJ,UAAK,IAAY;QAAjB,iBAIC;QAHC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YACzC,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IACpC,CAAC;IAED,iCAAM,GAAN,UAAO,IAAI;QAAX,iBAIC;QAHC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC3C,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IACpC,CAAC;IA/CU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAM2B,8DAAc;YACb,sDAAM;YACF,kEAAU;YACR,wEAAY;OARnC,gBAAgB,CAgD5B;IAAD,uBAAC;CAAA;AAhD4B;;;;;;;;;;;;ACZ7B,+DAA+D,mJ;;;;;;;;;;;ACA/D,8NAA8N,cAAc,WAAW,UAAU,+GAA+G,UAAU,uM;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxU;AACK;AACM;AAQ7D;IAGE,0BAAoB,UAAsB,EAAU,YAA0B;QAA1D,eAAU,GAAV,UAAU,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnF,mCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,cAAI;YACrC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oCACN,GAAG;gBACZ,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,QAAQ,GAAG,GAAG,EAAlB,CAAkB,CAAC,CAAC;YACvE,CAAC;YAFD,KAAkB,UAAS,EAAT,UAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS;gBAAtB,IAAM,GAAG;wBAAH,GAAG;aAEb;QACC,CAAC,CAAC,CAAC;IACT,CAAC;IAZU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAIgC,kEAAU,EAAwB,wEAAY;OAHnE,gBAAgB,CAa5B;IAAD,uBAAC;CAAA;AAb4B;;;;;;;;;;;;;ACV7B;AAAe;IACb,IAAI,EAAE;QACJ,QAAQ,EAAE,sBAAsB;QAChC,MAAM,EAAE,2BAA2B;QACnC,WAAW,EAAE,yCAAyC;QACtD,KAAK,EAAE,sBAAsB;KAC9B;CACF,EAAC;;;;;;;;;;;;ACPF,+DAA+D,uI;;;;;;;;;;;ACA/D,+KAA+K,iBAAiB,8UAA8U,cAAc,yCAAyC,iBAAiB,4cAA4c,wM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz+B;AACP;AACG;AACL;AAOhD;IAQE,uBAAoB,QAAyB,EAAU,MAAc,EAAU,UAAsB;QAAjF,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAY;QALrG,SAAI,GAAG;YACL,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb,CAAC;IAGF,CAAC;IAEK,gCAAQ,GAAd;;;;;;;wBACE,SAAI;wBAAmB,qBAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;;wBAA5D,GAAK,eAAe,GAAG,SAAqC,CAAC;wBAC7D,4CAA4C;wBAC5C,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,SAAS,CAC1C,UAAC,eAAwB,IAAK,YAAI,CAAC,eAAe,GAAG,eAAe,EAAtC,CAAsC,CACrE,CAAC;;;;;KACH;IAED,uCAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,6BAAK,GAAL;QAAA,iBAmBC;QAlBC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzE,UAAC,IAAS;YACR,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACpD,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACzD,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC3D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACpC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC1B,CAAC,EACD;YACE,mBAAmB;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CACrC,UAAC,IAAS;YACR,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC1B,IAAM,WAAW,GAAG,IAAI,CAAC;YACzB,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;YAC7D,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5D,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC1B,CAAC,EACD,cAAQ,CAAC,CACV,CAAC;IACJ,CAAC;IAzDU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAS8B,kEAAe,EAAkB,sDAAM,EAAsB,kEAAU;OAR1F,aAAa,CA0DzB;IAAD,oBAAC;CAAA;AA1DyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV2B;AACS;AACf;AACH;AAId;AACwC;AAChB;AAKtD;IAEE,8BAAoB,QAAkB,EAAU,UAAsB;QAAlD,aAAQ,GAAR,QAAQ,CAAU;QAAU,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE3E,uCAAQ,GAAR,UAAS,GAAqB,EAAE,KAAa;QAC3C,OAAO,GAAG,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,EAAE,aAAa,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC;IACvG,CAAC;IAED,wCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAqBC;QAnBC,IAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACxD,IAAI,CAAC,oEAAe,CAAC,cAAc,EAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,WAAW,KAAK,IAAI,EAAE;YACjG,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;SACrC;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAClF,iEAAU,CAAC,UAAC,KAAU;YACpB,IAAI,KAAK,YAAY,sEAAiB,EAAE;gBACtC,QAA4B,KAAM,CAAC,MAAM,EAAE;oBACzC,KAAK,GAAG;wBACN,OAAO,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBACpC,KAAK,GAAG;wBACN,OAAO,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBAC5C;wBACE,OAAO,uDAAoB,CAAC,KAAK,CAAC,CAAC;iBACtC;aACF;iBAAM;gBACL,OAAO,uDAAoB,CAAC,KAAK,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,6CAAc,GAAd,UAAe,KAAK;QAElB,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,eAAe,EAAE;YACzF,oGAAoG;YACpG,8BAA8B;SAC/B;QAED,OAAO,uDAAoB,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,6CAAc,GAAd,UAAe,GAAqB,EAAE,IAAiB;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IAED;;;MAGE;IACF,4CAAa,GAAb,UAAc,GAAqB;QACjC,IAAM,MAAM,GAAQ,GAAG,CAAC,MAAM,CAAC;QAC/B,OAAO,IAAI,gEAAW,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IArDU,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG8B,sDAAQ,EAAsB,kEAAU;OAF3D,oBAAoB,CAuDhC;IAAD,2BAAC;CAAA;AAvDgC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbU;AACgC;AAE5C;AAG/B;IAIE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH7B,QAAG,GAAG,4BAA4B,CAAC;QACnC,YAAO,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;IAGpC,CAAC;IAED,2BAAM,GAAN;QACE,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC9B,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;SAChE,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACtG,GAAG,CAAC,aAAG,IAAI,UAAG,EAAH,CAAG,CAAC,CAAC;IACrB,CAAC;IAED,wBAAG,GAAH,UAAI,EAAU;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,yBAAI,GAAJ,UAAK,GAAQ;QACX,IAAI,MAA0B,CAAC;QAC/B,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE;YACf,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACvC;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SAC5C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,2BAAM,GAAN,UAAO,IAAY;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,wFAAwF;IACxF,4CAA4C;IAC5C,8CAA8C;IAC9C,gBAAgB;IAChB,yBAAyB;IACzB,SAAS;IACT,eAAe;IACf,4BAA4B;IAC5B,SAAS;IACT,cAAc;IACd,sBAAsB;IACtB,QAAQ;IACR,OAAO;IACP,IAAI;IAEJ,0BAAK,GAAL,UAAM,QAAQ,EAAE,QAAQ;QACtB,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC9B,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE,kBAAkB;SACnC,CAAC,CAAC;QACH,IAAM,MAAM,GAAG;YACb,UAAU,EAAE,QAAQ;YACpB,UAAU,EAAE,QAAQ;YACpB,YAAY,EAAE,gBAAgB;YAC9B,SAAS,EAAE;gBACT,2BAA2B,EAAE,KAAK;gBAClC,2BAA2B,EAAE,KAAK;aACnC;SACF,CAAC;QACF,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,wCAAwC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACjI,GAAG,CAAC,aAAG,IAAI,UAAG,EAAH,CAAG,CAAC,CAAC;IACrB,CAAC;IAED,8BAAS,GAAT,UAAU,QAAQ,EAAE,QAAQ;QAC1B,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC9B,cAAc,EAAE,kBAAkB;SACnC,CAAC,CAAC;QACH,IAAM,QAAQ,GAAe,IAAI,+DAAU,EAAE;aAC1C,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;aACzB,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,oBAAoB,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACtH,CAAC;IAED,6BAAQ,GAAR;QACE,IAAM,QAAQ,GAAG,IAAI,gEAAW,CAAC;YAC/B,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE,kBAAkB;YAC5B,eAAe,EAAE,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;SAChE,CAAC,CAAC;QACH,gDAAgD;QAChD,+BAA+B;QAC/B,gCAAgC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wCAAwC,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9G,CAAC;IAED,iEAAiE;IACjE,sCAAiB,GAAjB;QACE,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS,CAC1B,UAAC,IAAI;YACH,IAAM,WAAW,GAAG,IAAI,CAAC;YACzB,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;YAC7D,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5D,CAAC,EACD,UAAC,GAAG,IAAO,CAAC,EACZ,cAAQ,CAAC,CACV,CAAC;IACJ,CAAC;IAED,6BAA6B;IAC7B,gCAAW,GAAX;QACE,IAAM,aAAa,GAAe,IAAI,+DAAU,EAAE;aAC/C,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;QAE7D,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC9B,QAAQ,EAAE,kBAAkB;SAC7B,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,0BAA0B,EAAE;YAC1D,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa;YACvC,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC,GAAG,CAAC,UAAC,GAAQ;YACd,IAAM,WAAW,GAAG,IAAI,CAAC;YACzB,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAxHU,UAAU;QADtB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;yCAKP,+DAAU;OAJzB,UAAU,CA0HtB;IAAD,iBAAC;CAAA;AA1HsB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPoB;AACO;AACb;AAIrC;IAKE,sBAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHnC,qEAAqE;QACrE,aAAQ,GAAG,iEAAiE,CAAC;IAG7E,CAAC;IAED,0BAAG,GAAH,UAAI,UAAU;QACZ,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa;YACnD,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5B,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;aAC7C;iBAAM;gBACL,OAAO,uDAAuD,CAAC,CAAC,sBAAsB;aACvF;QACH,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAjBU,YAAY;QAFxB,gEAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;QACjC,8HAA8H;;yCAMnG,+DAAU;OALxB,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNkB;AAEH;AACa;AAGrD;IAEE,yBAAoB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;IAC7C,CAAC;IAED,mCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QACpD,OAAO,iDAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;IAChD,CAAC;IAEa,sCAAY,GAA1B,UAA2B,OAAyB,EAAE,IAAiB;;;;;;6BAGjE,QAAO,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAA/C,wBAA+C;wBAC7B,qBAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;;wBAAlD,WAAW,GAAG,SAAoC;wBACxD,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;4BACtB,UAAU,EAAE;gCACV,aAAa,EAAE,SAAS,GAAG,WAAW;6BACvC;yBACF,CAAC,CAAC;;4BAEL,sBAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAC;;;;KACzC;IArBU,eAAe;QAD3B,gEAAU,EAAE;yCAGmB,kEAAe;OAFlC,eAAe,CAsB3B;IAAD,sBAAC;CAAA;AAtB2B;;;;;;;;;;;;;ACN5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,IAAI,EAAE,uBAAuB;CAC9B,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CarListComponent } from './car-list/car-list.component';\nimport { CarEditComponent } from './car-edit/car-edit.component';\nimport { OktaCallbackComponent } from '@okta/okta-angular';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  {\n    path: 'login',\n    component: HomeComponent\n  },\n  {\n    path: 'car-list',\n    component: CarListComponent\n  },\n  {\n    path: 'car-add',\n    component: CarEditComponent\n  },\n  {\n    path: 'car-edit/:id',\n    component: CarEditComponent\n  },\n  {\n    path: 'implicit/callback', // redirectTo: '/car-list', pathMatch: 'full'\n     component: CarListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".toolbar-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudG9vbGJhci1zcGFjZXIge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cbiJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>Welcome to {{title}}!</span>\\n  <span class=\\\"toolbar-spacer\\\"></span>\\n  <button mat-raised-button color=\\\"accent\\\" *ngIf=\\\"isAuthenticated\\\"\\n          (click)=\\\"oktaAuth.logout()\\\" [routerLink]=\\\"['/home']\\\">Logout\\n  </button>\\n</mat-toolbar>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { OktaAuthService } from '@okta/okta-angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'client';\n  isAuthenticated: boolean;\n\n  constructor(public oktaAuth: OktaAuthService) {\n  }\n\n  async ngOnInit() {\n    this.isAuthenticated = await this.oktaAuth.isAuthenticated();\n    // Subscribe to authentication state changes\n    this.oktaAuth.$authenticationState.subscribe(\n      (isAuthenticated: boolean)  => this.isAuthenticated = isAuthenticated\n    );\n  }\n}\n","import { HttpTokenInterceptor } from './http-interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { CarListComponent } from './car-list/car-list.component';\nimport { MatButtonModule, MatCardModule, MatInputModule, MatListModule, MatToolbarModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CarEditComponent } from './car-edit/car-edit.component';\nimport { FormsModule } from '@angular/forms';\nimport { OktaAuthModule, OKTA_CONFIG } from '@okta/okta-angular';\nimport { AuthInterceptor } from './shared/okta/auth.interceptor';\nimport { HomeComponent } from './home/home.component';\nimport oktaConfig from './configs/.okta.config';\n\nconst oktaConfigData = Object.assign({\n  onAuthRequired: ({oktaAuth, router}) => {\n\n    router.navigate(['/login']);\n  }\n}, oktaConfig.oidc);\n// const config = {\n//   issuer: 'https://itorizon.okta.com/oauth2/default',\n//   redirectUri: 'http://localhost:4200/implicit/callback',\n//   clientId: '0oaxt26hyG7QZD4vc356',\n//   scope: 'openid profile email'\n// };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CarListComponent,\n    CarEditComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatListModule,\n    MatToolbarModule,\n    FormsModule,\n    OktaAuthModule.initAuth(oktaConfigData)\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: HttpTokenInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".giphy {\\n  margin: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FyLWVkaXQvY2FyLWVkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7Q0FDZCIsImZpbGUiOiJzcmMvYXBwL2Nhci1lZGl0L2Nhci1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ2lwaHkge1xuICBtYXJnaW46IDEwcHg7XG59XG4iXX0= */\"","module.exports = \"<mat-card>\\n  <form #carForm=\\\"ngForm\\\" (ngSubmit)=\\\"save(carForm.value)\\\">\\n    <mat-card-header>\\n      <mat-card-title><h2>{{car.name ? 'Edit' : 'Add'}} Car</h2></mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <input type=\\\"hidden\\\" name=\\\"href\\\" [(ngModel)]=\\\"car.href\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Car Name\\\" [(ngModel)]=\\\"car.name\\\"\\n               required name=\\\"name\\\" #name>\\n      </mat-form-field>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\n              [disabled]=\\\"!carForm.form.valid\\\">Save</button>\\n      <button mat-raised-button color=\\\"secondary\\\" (click)=\\\"remove(car.href)\\\"\\n              *ngIf=\\\"car.href\\\" type=\\\"button\\\">Delete</button>\\n      <a mat-button routerLink=\\\"/car-list\\\">Cancel</a>\\n    </mat-card-actions>\\n    <mat-card-footer>\\n      <div class=\\\"giphy\\\">\\n        <img src=\\\"{{car.giphyUrl}}\\\" alt=\\\"{{car.name}}\\\">\\n      </div>\\n    </mat-card-footer>\\n  </form>\\n</mat-card>\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CarService } from '../shared/car/car.service';\nimport { NgForm } from '@angular/forms';\nimport { GiphyService } from '../shared/giphy/giphy.service';\n\n@Component({\n  selector: 'app-car-edit',\n  templateUrl: './car-edit.component.html',\n  styleUrls: ['./car-edit.component.css']\n})\nexport class CarEditComponent implements OnInit, OnDestroy {\n  car: any = {};\n\n  sub: Subscription;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private carService: CarService,\n              private giphyService: GiphyService) {\n  }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      const id = params['id'];\n      if (id) {\n        this.carService.get(id).subscribe((car: any) => {\n          if (car) {\n            this.car = car;\n            this.car.href = car._links.self.href;\n            this.giphyService.get(car.name).subscribe(url => car.giphyUrl = url);\n          } else {\n            console.log(`Car with id '${id}' not found, returning to list`);\n            this.gotoList();\n          }\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  gotoList() {\n    this.router.navigate(['/car-list']);\n  }\n\n  save(form: NgForm) {\n    this.carService.save(form).subscribe(result => {\n      this.gotoList();\n    }, error => console.error(error));\n  }\n\n  remove(href) {\n    this.carService.remove(href).subscribe(result => {\n      this.gotoList();\n    }, error => console.error(error));\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nhci1saXN0L2Nhci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\n    <mat-card-title>Car List</mat-card-title>\\n    <mat-card-content>\\n        <mat-list>\\n            <mat-list-item *ngFor=\\\"let car of cars\\\">\\n                <img mat-list-avatar src=\\\"{{car.giphyUrl}}\\\" alt=\\\"{{car.name}}\\\">\\n                <h3 mat-line>\\n                    <a mat-button [routerLink]=\\\"['/car-edit', car.id]\\\">{{car.name}}</a>\\n                </h3>\\n            </mat-list-item>\\n        </mat-list>\\n    </mat-card-content>\\n    <button mat-fab color=\\\"primary\\\" [routerLink]=\\\"['/car-add']\\\">Add</button>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { CarService } from '../shared/car/car.service';\nimport { GiphyService } from '../shared/giphy/giphy.service';\nimport { HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'app-car-list',\n  templateUrl: './car-list.component.html',\n  styleUrls: ['./car-list.component.css']\n})\nexport class CarListComponent implements OnInit {\n  cars: Array<any>;\n\n  constructor(private carService: CarService, private giphyService: GiphyService) { }\n\n  ngOnInit() {\n    this.carService.getAll().subscribe(data => {\n      this.cars = data;\n      for (const car of this.cars) {\n        this.giphyService.get(car.name).subscribe(url => car.giphyUrl = url);\n      }\n        });\n  }\n}\n","export default {\r\n  oidc: {\r\n    clientId: '0oaxt26hyG7QZD4vc356',\r\n    issuer: 'https://itorizon.okta.com',\r\n    redirectUri: 'http://localhost:4200/implicit/callback',\r\n    scope: 'openid profile email'\r\n  }\r\n};\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card>\\n    <div class=\\\"ui-grid-row\\\" id=\\\"divHeader\\\">\\n        <input type=\\\"text\\\" class=\\\"loginInputTextBox\\\" name=\\\"username\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"user.userName\\\" #username=\\\"ngModel\\\" oninvalid=\\\"this.setCustomValidity('Please Enter Valid UserName.')\\\" oninput=\\\"setCustomValidity('')\\\" placeholder=\\\"UserName\\\"\\n            required />\\n    </div>\\n    <br/>\\n    <div class=\\\"ui-grid-row\\\" id=\\\"divHeader\\\">\\n        <input class=\\\"loginInputTextBox\\\" type=\\\"{{passwordType}}\\\" name=\\\"password\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" required placeholder=\\\"Password\\\" />\\n    </div>\\n    <br/>\\n    <!-- <div class=\\\"ui-grid-row\\\">\\n        <div>\\n            <button type=\\\"button\\\" class=\\\"ui-button-raised ui-button-login\\\" (click)=\\\"login()\\\">LogIn</button>\\n        </div>\\n    </div> -->\\n    <mat-card-content>\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"login()\\\">Login\\n            <!-- oktaAuth.loginRedirect(); -->\\n    </button>\\n        <!-- <button mat-raised-button color=\\\"accent\\\" *ngIf=\\\"isAuthenticated\\\" [routerLink]=\\\"['/car-list']\\\">Car List\\n    </button> -->\\n    </mat-card-content>\\n</mat-card>\"","import { CarService } from './../shared/car/car.service';\nimport { Component, OnInit } from '@angular/core';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Route, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  isAuthenticated: boolean;\n\n  user = {\n    userName: '',\n    password: ''\n  };\n\n  constructor(private oktaAuth: OktaAuthService, private router: Router, private carService: CarService) {\n  }\n\n  async ngOnInit() {\n    this.isAuthenticated = await this.oktaAuth.isAuthenticated();\n    // Subscribe to authentication state changes\n    this.oktaAuth.$authenticationState.subscribe(\n      (isAuthenticated: boolean) => this.isAuthenticated = isAuthenticated\n    );\n  }\n\n  redirectToLogin() {\n    this.router.navigate(['/car-list']);\n  }\n\n  login() {\n    this.carService.loginBack(this.user.userName, this.user.password).subscribe(\n      (data: any) => {\n        console.log('data', data);\n        console.log('data.accessToken', data.accessToken);\n        console.log('data.refreshToken', data.refreshToken);\n        if (data.success) {\n          localStorage.setItem('accessToken', data['accessToken']);\n          localStorage.setItem('refreshToken', data['refreshToken']);\n          this.router.navigate(['car-list']);\n        }\n      },\n      (err) => {\n        console.log('err', err);\n      },\n      () => {\n        // this.getGreet();\n      },\n    );\n  }\n\n  getGreet() {\n    this.carService.getNewToken().subscribe(\n      (data: any) => {\n        console.log('data', data);\n        const accessToken = data;\n        localStorage.setItem('accessToken', accessToken.accessToken);\n        localStorage.setItem('refreshToken', accessToken.idToken);\n      },\n      (err) => {\n        console.log('err', err);\n      },\n      () => { },\n    );\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\nimport { catchError } from 'rxjs/operators';\r\nimport {\r\n  HttpInterceptor, HttpHandler, HttpSentEvent, HttpHeaderResponse, HttpProgressEvent, HttpResponse,\r\n  HttpUserEvent, HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { throwError as observableThrowError, Observable } from 'rxjs';\r\nimport { CarService } from './shared/car/car.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpTokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private injector: Injector, private carService: CarService) { }\r\n\r\n  addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\r\n    return req.clone({ setHeaders: { Authorization: 'Bearer ' + localStorage.getItem('accessToken') } });\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent |\r\n    HttpResponse<any> | HttpUserEvent<any> | HttpEvent<any> | any> {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!tokenNotExpired('access_token', localStorage.getItem('accessToken')) && accessToken !== null) {\r\n      this.carService.fetchRefreshToken();\r\n    }\r\n    return next.handle(this.addToken(request, localStorage.getItem('accessToken'))).pipe(\r\n      catchError((error: any) => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          switch ((<HttpErrorResponse>error).status) {\r\n            case 400:\r\n              return this.handle400Error(error);\r\n            case 401:\r\n              return this.handle401Error(request, next);\r\n            default:\r\n              return observableThrowError(error);\r\n          }\r\n        } else {\r\n          return observableThrowError(error);\r\n        }\r\n      }));\r\n  }\r\n\r\n  handle400Error(error): Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent |\r\n    HttpResponse<any> | HttpUserEvent<any> | HttpEvent<any> | any> {\r\n    if (error && error.status === 400 && error.error && error.error.error === 'invalid_grant') {\r\n      // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\r\n      // this.logInService.logout();\r\n    }\r\n\r\n    return observableThrowError(error);\r\n  }\r\n\r\n  handle401Error(req: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent |\r\n    HttpResponse<any> | HttpUserEvent<any> | HttpEvent<any> | any> {\r\n    return next.handle(this.addToken(this.getNewRequest(req), localStorage.getItem('accessToken')));\r\n  }\r\n\r\n  /*\r\n      This method is only here so the example works.\r\n      Do not include in your code, just use 'req' instead of 'this.getNewRequest(req)'.\r\n  */\r\n  getNewRequest(req: HttpRequest<any>): HttpRequest<any> {\r\n    const method: any = req.method;\r\n    return new HttpRequest(method, req.url);\r\n  }\r\n\r\n}\r\n","import { environment } from './../../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map';\n\n@Injectable({ providedIn: 'root' })\nexport class CarService {\n  public API = 'http://localhost:8080/okta';\n  public CAR_API = this.API + '/cars';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(): Observable<any> {\n    const headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer' + localStorage.getItem('accessToken')\n    });\n    return this.http.get(this.API + '/check/greet', { params: null, headers: headers, responseType: 'json' })\n      .map(res => res);\n  }\n\n  get(id: string) {\n    return this.http.get(this.CAR_API + '/' + id);\n  }\n\n  save(car: any): Observable<any> {\n    let result: Observable<Object>;\n    if (car['href']) {\n      result = this.http.put(car.href, car);\n    } else {\n      result = this.http.post(this.CAR_API, car);\n    }\n    return result;\n  }\n\n  remove(href: string) {\n    return this.http.delete(href);\n  }\n\n  // fetchData(onSuccess: (data) => void, onError: (data) => void, onComplete: () => void,\n  //   username: any, password: string): any {\n  //   this.login(username, password).subscribe(\n  //     resp => {\n  //       onSuccess(resp);\n  //     },\n  //     err => {\n  //       onError(err.error);\n  //     },\n  //     () => {\n  //       onComplete();\n  //     }\n  //   );\n  // }\n\n  login(userName, password) {\n    const headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    });\n    const detail = {\n      'username': userName,\n      'password': password,\n      'relayState': 'www.google.com',\n      'options': {\n        'multiOptionalFactorEnroll': false,\n        'warnBeforePasswordExpired': false\n      }\n    };\n    const body = JSON.stringify(detail);\n    return this.http.post<any>('https://itorizon.okta.com/api/v1/authn', body, { params: null, headers: headers, responseType: 'json' })\n      .map(res => res);\n  }\n\n  loginBack(userName, password) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const reqParam: HttpParams = new HttpParams()\n      .set('userName', userName)\n      .set('password', password);\n    return this.http.get(this.API + '/user/authenticate', { params: reqParam, headers: headers, responseType: 'json' });\n  }\n\n  getGreet() {\n    const headers1 = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': 'Bearer' + localStorage.getItem('accessToken')\n    });\n    // const reqParam: HttpParams = new HttpParams()\n    //   .set('userName', userName)\n    //   .set('password', password);\n    return this.http.get('http://localhost:8080/okta/check/greet', { headers: headers1, responseType: 'text' });\n  }\n\n  // To fetch the new access_token using the existing refresh_token\n  fetchRefreshToken() {\n    this.getNewToken().subscribe(\n      (data) => {\n        const accessToken = data;\n        localStorage.setItem('accessToken', accessToken.accessToken);\n        localStorage.setItem('refreshToken', accessToken.idToken);\n      },\n      (err) => { },\n      () => { }\n    );\n  }\n\n  // To fetch the new JWT Token\n  getNewToken() {\n    const requestParams: HttpParams = new HttpParams()\n      .set('refreshToken', localStorage.getItem('refreshToken'));\n\n    const headers = new HttpHeaders({\n      'Accept': 'application/json'\n    });\n\n    return this.http.get(this.API + '/user/getRefreshedTokens', {\n      headers: headers, params: requestParams,\n      responseType: 'json'\n    }).map((res: any) => {\n      const accessToken = null;\n      return res;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\n// http://tutorials.pluralsight.com/front-end-javascript/getting-started-with-angular-2-by-building-a-giphy-search-application\nexport class GiphyService {\n\n  // Public beta key: https://github.com/Giphy/GiphyAPI#public-beta-key\n  giphyApi = '//api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&limit=1&q=';\n\n  constructor(public http: HttpClient) {\n  }\n\n  get(searchTerm) {\n    const apiLink = this.giphyApi + searchTerm;\n    return this.http.get(apiLink).pipe(map((response: any) => {\n      if (response.data.length > 0) {\n        return response.data[0].images.original.url;\n      } else {\n        return 'https://media.giphy.com/media/YaOxRsmrv9IeA/giphy.gif'; // dancing cat for 404\n      }\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable, from } from 'rxjs';\nimport { OktaAuthService } from '@okta/okta-angular';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private oktaAuth: OktaAuthService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return from(this.handleAccess(request, next));\n  }\n\n  private async handleAccess(request: HttpRequest<any>, next: HttpHandler): Promise<HttpEvent<any>> {\n    // Only add to known domains since we don't want to send our tokens to just anyone.\n    // Also, Giphy's API fails when the request includes a token.\n    if (request.urlWithParams.indexOf('localhost') > -1) {\n      const accessToken = await this.oktaAuth.getAccessToken();\n      request = request.clone({\n        setHeaders: {\n          Authorization: 'Bearer ' + accessToken\n        }\n      });\n    }\n    return next.handle(request).toPromise();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  host: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}